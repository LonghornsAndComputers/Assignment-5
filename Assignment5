#  File: Work.py

#  Description:

#  Student Name: Matthew Meldrum

#  Student UT EID: msm4727

#  Partner Name: Ryan Herrmann

#  Partner UT EID: rch2848

#  Course Name: CS 313E

#  Unique Number: 52520

#  Date Created: 10-02-2022

#  Date Last Modified: 10-02-22



import sys
import time


# Input: v an integer representing the minimum lines of code and
#        k an integer representing the productivity factor
# Output: computes the sum of the series (v + v // k + v // k**2 + ...)
#         returns the sum of the series
def sum_series (v, k):
  i = 1
  sum = v
  while(True):
    quicksum = v//k**i
    sum = quicksum + sum
    i += 1
    if quicksum == 0:
      break
  return sum



# Input: n an integer representing the total number of lines of code
#        k an integer representing the productivity factor
# Output: returns v the minimum lines of code to write using linear search
def linear_search (n, k):
  v = 0
  while(True):
    myNum = sum_series(v, k)
    if myNum >= n:
      break
    v += 1
  return v


# Input: n an integer representing the total number of lines of code
#        k an integer representing the productivity factor
# Output: returns v the minimum lines of code to write using binary search
def binary_search (n, k):
  highv = n
  lowv = 0
  while(True):
    v  = (highv - lowv)/2 + lowv
    myNum = sum_series(v,k)
    if (highv - lowv) <= 1:
      break
    elif myNum >= n:
      highv = v
    elif myNum <= n:
      lowv = v
  if round(v) == 0:
    return 1
  else:
    return round(v)



def main():
  # read number of cases
  line = sys.stdin.readline()
  line = line.strip()
  num_cases = int (line)

  for i in range (num_cases):
    line = sys.stdin.readline()
    line = line.strip()
    inp =  line.split()
    n = int(inp[0])
    k = int(inp[1])

    start = time.time()
    print("Binary Search: " + str(binary_search(n, k)))
    finish = time.time()
    print("Time: " + str(finish - start))

    print()

    start = time.time()
    print("Linear Search: " + str(linear_search(n, k)))
    finish = time.time()
    print("Time: " + str(finish - start))

    print()
    print()

if __name__ == "__main__":
  main()
